robo3T:
******

Find with specific search criteria and with specific fields to display:

db.getCollection('memberDetail_DEC04').find({"memberDetailValue.planInfo.mastGroupNbr":false},
{'mbrId':"1",'memberDetailValue.patientInfo.firstNm':"1", 'memberDetailValue.patientInfo.lastNm':"1",'memberDetailValue.planInfo.mbrKey':"1"})

Find with in clause:
db.getCollection('memberDetail_DEC13').find({mbrId: {$in: ['AN2024173','AN2024196']}})

Find with multiple conditions and greater than condition
db.getCollection('memberDetail_DEC14').find(
 {$and : [{$expr: {$gt: ["memberDetailValue.planInfo.effectiveDt","memberDetailValue.planInfo.terminationDt"]}
},{'memberDetailValue.planInfo.sourceSystemId':"NASCO"}]
}
) 

db.getCollection('memberDetail').find({'memberDetailValue.planInfo.sourceSystemId':"STAR",mbrId:"535T65450"})  

db.memberDetail.find({$expr: {$eq: ["$memberDetailValue.planInfo.cmsNbr", "$memberDetailValue.planInfo.medicareId"] } ,
'memberDetailValue.planInfo.sourceSystemId':"NASCO"})

>db.blog.find({$or:[{"by":â€œmurthy"},{"title": "MongoDB Overview"}]}).pretty()

db.blog.aggregate([{$group : {_id : "$by_user", likes : {$sum : 1}}}])
 
-----------------------------------
only distinct:
db.getCollection('memberDetail_NOV27').distinct ("memberDetailValue.patientInfo.relationshipCd.code")

distinct with filters:
db.getCollection('memberDetail').distinct ("memberDetailValue.planInfo.subscriberId",
{'memberDetailValue.planInfo.sourceSystemId':"STAR",mbrId:"496T65395"}
)

distinct with in clause:
db.getCollection('memberDetail_DEC13').distinct ("memberDetailValue.patientCommunication.address.addressTypeCd.code",
{'memberDetailValue.planInfo.sourceSystemId':{$in: ['NSCO','STAR']}}
)

----------------------------------
collection = db.memberDetail_NOV27;
result = collection.aggregate( 
            [
                {"$group": { "_id": { code: "$memberDetailValue.patientInfo.prefLangInd.code", name: "$memberDetailValue.patientInfo.prefLangInd.name" } } }
				
            ]
        );
printjson(result);

collection = db.memberDetail_NOV27;
result = collection.aggregate( 
            [
                {"$group": { "_id": { mcid: "$mcid",code: "$memberDetailValue.patientInfo.prefLangInd.code", name:"$memberDetailValue.patientInfo.prefLangInd.name" } } } 
				
            ]
        );
printjson(result);
-----------------------------------------
db.memberDetail_NOV27.aggregate([
{$group : { _id: "$memberDetailValue.planInfo.groupNm" , count : { $sum: 1}}},
{$match : { count : { $gt : 1 } }} ])
------------------------------------------
for 1 mcid multiple groups:

collection = db.memberDetail_NOV27;
result = collection.aggregate( 
            [
                {"$group": { "_id": { mcid: "$mcid",groupNm: "$memberDetailValue.planInfo.groupNm" } } } 
				
            ]
        );
printjson(result);
*******************************************
*******************************************
CDHP:

db.getCollection('memberDetail_DEC24').distinct ("memberDetailValue.patientCommunication.phoneDetails.phoneNbr",
{'mbrId':{$in: [ 'AN5419056', 'AN5419850', 'AN5419844', 'AN5419847', 'AN5420107', 'AN5419060', 'AN5419820', 'AN5419053', 'AN5413749', 'AN5412821', 'AN5420108', 'AN5412820', 'AN5419843', 'AN5419054', 'AN5419846', 'AN5419821', 'AN5413746', 'AN5419061', 'AN5419057', 'AN5413745', 'AN5419851', 'AN5413748', 'AN5413753', 'AN5413752', 'AN5412816']}}
)
********************************************
Mongo Tag wise:
===============
collection = db.memberDetail_DEC04;
result = collection.aggregate( 
            [
                {"$group": { "_id": { code: "$memberDetailValue.patientInfo.relationshipCd.code", name: "$memberDetailValue.patientInfo.relationshipCd.name",
                    description: "$memberDetailValue.patientInfo.relationshipCd.description"
                    } } }
				
            ]
        );
printjson(result);

db.getCollection('memberDetail_DEC26').distinct ("memberDetailValue.patientInfo.relationshipCd",
{'memberDetailValue.planInfo.sourceSystemId':"WGS"}
)
-------------
collection = db.memberDetail_DEC04;
result = collection.aggregate( 
            [
                {"$group": { "_id": { code: "$memberDetailValue.patientInfo.genderCd.code", name: "$memberDetailValue.patientInfo.genderCd.name",
                    
                    } } }
				
            ]
        );
printjson(result);

db.getCollection('memberDetail_DEC26').distinct ("memberDetailValue.patientInfo.genderCd",
{'memberDetailValue.planInfo.sourceSystemId':"WGS"}
)

-------------------------
db.getCollection('memberDetail_DEC04').distinct ("memberDetailValue.patientInfo.emplInd").sort()
------------------------
collection = db.memberDetail_DEC04;
result = collection.aggregate( 
            [
                {"$group": { "_id": { code: "$memberDetailValue.patientInfo.prefLangInd.code", name: "$memberDetailValue.patientInfo.prefLangInd.name",
                    description: "$memberDetailValue.patientInfo.prefLangInd.description"
                    } } }
				
            ]
        );
printjson(result);

db.getCollection('memberDetail_DEC26').distinct ("memberDetailValue.patientInfo.prefLangInd",
{'memberDetailValue.planInfo.sourceSystemId':"WGS"}
)
-------------------------------
collection = db.memberDetail_DEC04;
result = collection.aggregate( 
            [
                {"$group": { "_id": { code: "$memberDetailValue.planInfo.stateCd.code", name: "$memberDetailValue.planInfo.stateCd.name"
                    
                    } } }
				
            ]
        );
printjson(result);


db.getCollection('memberDetail').find( 
{$and : [{'memberDetailValue.planInfo.sourceSystemId':"NASCO"},{
    "memberDetailValue.planInfo.stateCd.code" : {$nin: ['AL' ,'AK' ,'AZ' ,'AR' ,'CA' ,'CO' ,'CT' ,'DE' ,'FL' ,'GA' ,'HI' ,'ID' ,'IL' ,'IN' ,'IA' ,'KS' ,'KY' ,'LA' ,'ME' ,'MD' ,'MA' ,'MI' ,'MN' ,'MS' ,'MO' ,'MT' ,'NE' ,'NV' ,'NH' ,'NJ' ,'NM' ,'NY' ,'NC' ,'ND' ,'OH' ,'OK' ,'OR' ,'PA' ,'RI' ,'SC' ,'SD' ,'TN' ,'TX' ,'UT' ,'VT' ,'VA' ,'WA' ,'WV' ,'WI' ,'WY' ,'DC' ,'AS' ,'GU' ,'MP' ,'PR' ,'VI']
        }
    }]}
)       
-----------------------------------------
db.getCollection('memberDetail').distinct ("memberDetailValue.planInfo.nationalAcctInd",
{'memberDetailValue.planInfo.sourceSystemId':"NASCO",'memberDetailValue.planInfo.productId':"NATIONAL"}
)
